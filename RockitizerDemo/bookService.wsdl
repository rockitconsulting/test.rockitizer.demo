<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" name="BookService" targetNamespace="http://www.cleverbuilder.com/BookService/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.cleverbuilder.com/BookService/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>
    <wsdl:appinfo source="WMQI_APPINFO">
      <MRWSDLAppInfo imported="true">
        <binding hasEncoding="false" imported="true" name="BookServiceSOAP" originalBindingStyle="document"/>
        <generatedXSD location="bookService_InlineSchema1.xsd"/>
      </MRWSDLAppInfo>
    </wsdl:appinfo>
  </wsdl:documentation>
	

	<!-- 
		The `types` element defines the data types (XML elements)
		that are used by the web service.
	 -->
	<wsdl:types>
		
        	<xsd:schema targetNamespace="http://www.cleverbuilder.com/BookService/" xmlns:ibmSchExtn="http://www.ibm.com/schema/extensions">
<xsd:include schemaLocation="bookService_InlineSchema1.xsd"/>
</xsd:schema>
    </wsdl:types>


	<!-- 
		A wsdl `message` element is used to define a message
		exchanged between a web service, consisting of zero
		or more `part`s.
	 -->

	<wsdl:message name="GetBookRequest">
		<wsdl:part element="tns:GetBook" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="GetBookResponse">
		<wsdl:part element="tns:GetBookResponse" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="AddBookRequest">
		<wsdl:part element="tns:AddBook" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="AddBookResponse">
		<wsdl:part element="tns:AddBookResponse" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="GetAllBooksRequest">
		<wsdl:part element="tns:GetAllBooks" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="GetAllBooksResponse">
		<wsdl:part element="tns:GetAllBooksResponse" name="parameters"/>
	</wsdl:message>

	<!-- 
		A WSDL `portType` is used to combine multiple `message`s 
		(e.g. input, output) into a single operation.
		
		Here we define three synchronous (input/output) operations
		and the `message`s that must be used for each.
	 -->
	<wsdl:portType name="BookService">
		<wsdl:operation name="GetBook">
			<wsdl:input message="tns:GetBookRequest"/>
			<wsdl:output message="tns:GetBookResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddBook">
			<wsdl:input message="tns:AddBookRequest"/>
			<wsdl:output message="tns:AddBookResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetAllBooks">
			<wsdl:input message="tns:GetAllBooksRequest"/>
			<wsdl:output message="tns:GetAllBooksResponse"/>
		</wsdl:operation>
	</wsdl:portType>

	<!-- 
		The `binding` element defines exactly how each
		`operation` will take place over the network.
		In this case, we are using SOAP.
	 -->
	<wsdl:binding name="BookServiceSOAP" type="tns:BookService">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name="GetBook">
			<soap:operation soapAction="http://www.cleverbuilder.com/BookService/GetBook"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddBook">
			<soap:operation soapAction="http://www.cleverbuilder.com/BookService/AddBook"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAllBooks">
			<soap:operation soapAction="http://www.cleverbuilder.com/BookService/GetAllBooks"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>

	<!-- 
		The `service` element finally says where the service
		can be accessed from - in other words, its endpoint.
	 -->
	<wsdl:service name="BookService">
		<wsdl:port binding="tns:BookServiceSOAP" name="BookServiceSOAP">
			<soap:address location="http://www.example.org/BookService"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>